#!/usr/bin/env ruby
#
#
# restores a git repository earlier backed up with git-backup
# documentation in man git-restore(1)
#
# ideal scenario: git restore my-repo
#
# looks in git config for the default backup location
# search for the files corresponding to the repo name
# get the most recent
#
# In the future there will be probably 3 scripts, one for backup, one for restore and one with common functionality such as querying git config
#
# Right now, just take to command line parameters
#
# TODO:
# -everything ;)
#
#

bundle    = ARGV[ 0 ]
directory = ARGV[ 1 ]


if not File.exists?( bundle )

	raise( 'fatal: bundle not found: ' + bundle )

end


if File::directory?( directory )

	raise( 'fatal: destination directory exists! Overwriting not supported for the moment.' )

end


`git clone --mirror "#{bundle}" "#{directory}/.git"`

Dir::chdir( "#{directory}" )

`git config core.bare false`
`git config core.logallrefupdates true`
`git remote rm origin`
`git checkout`
